from langchain_deepseek import ChatDeepSeek
#from langchain.memory import ConversationBufferMemory
from langchain.memory import ConversationSummaryMemory
from langchain.agents import initialize_agent, Tool
from tavily import TavilyClient
from dotenv import load_dotenv
import os
import logging

logger = logging.getLogger(__name__)
load_dotenv()

class TavilySearchTool:
    """–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —á–µ—Ä–µ–∑ Tavily —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    
    def __init__(self):
        self.client = TavilyClient(api_key=os.getenv("TAVILY_API_KEY"))
        
    def search(self, query: str) -> str:
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"""
        try:
            logger.info(f"üîç –ü–æ–∏—Å–∫: {query}")
            result = self.client.search(
                query=query,
                search_depth="advanced",
                max_results=3,
                include_answer=True
            )
            
            if not result.get("results"):
                return "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
                
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–¥
            response = []
            if result.get("answer"):
                response.append(f"–û—Ç–≤–µ—Ç: {result['answer']}")
                
            for idx, res in enumerate(result["results"][:3], 1):
                response.append(
                    f"{idx}. [{res['title']}]({res['url']}): {res['content']}"
                )
            
            return "\n\n".join(response)
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
            return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
tavily_tool = TavilySearchTool()

llm = ChatDeepSeek(
    model=os.getenv("OPENAI_API_MODEL", "deepseek-chat"),
    api_key=os.getenv("OPENAI_API_KEY"),
    temperature=0.7,
    api_base=os.getenv("OPENAI_API_BASE_URL", "https://api.deepseek.com/v1")
)

tools = [
    Tool(
        name="InternetSearch",
        func=tavily_tool.search,
        description=(
            "–ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ. "
            "–ò—Å–ø–æ–ª—å–∑—É–π –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –æ —Ç–µ–∫—É—â–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö, –ø–æ–≥–æ–¥–µ, "
            "–ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç—è—Ö –∏–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö."
        )
    )
]

# memory = ConversationBufferMemory(memory_key="chat_history", return_messages=True)
memory = ConversationSummaryMemory(
    llm=llm, memory_key="chat_history", return_messages=True)

agent = initialize_agent(
    tools,
    llm,
    agent="chat-conversational-react-description",
    memory=memory,
    verbose=True,
    handle_parsing_errors=True,
    max_iterations=3,

)

# –ó–∞–ø—É—Å–∫ —á–∞—Ç-–±–æ—Ç–∞
print("–°–∏—Å—Ç–µ–º–∞: –ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã. –î–ª—è –≤—ã—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ 'exit'")
while True:
    try:
        user_input = input("–í—ã: ").strip()
        if user_input.lower() in {'exit', '–≤—ã—Ö–æ–¥', 'quit'}:
            break
            
        response = agent.run({"input": user_input})
        print(f"\n–°–∏—Å—Ç–µ–º–∞: {response}\n")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        memory.clear()  # –û—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö