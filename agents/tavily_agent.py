import os
import logging
from tavily import TavilyClient
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logger = logging.getLogger(__name__)


class TavilyAgent:
    """–ê–≥–µ–Ω—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ —Å –ø–æ–º–æ—â—å—é Tavily."""

    def __init__(self) -> None:
        self.api_key = os.getenv("TAVILY_API_KEY")
        if not self.api_key:
            raise ValueError(
                "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω API-–∫–ª—é—á Tavily. ")
        self.client = TavilyClient(self.api_key)

    def search(self, query: str, max_results: int = 5) -> list[str]:
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ.

        :param query: –°—Ç—Ä–æ–∫–∞ –∑–∞–ø—Ä–æ—Å–∞.
        :param max_results: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5).
        :return: –°–ø–∏—Å–æ–∫ URL —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏.
        """
        try:
            logger.info(f"üîç –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –≤ Tavily: {query}")
            results = self.client.search(query, max_results=max_results)
            urls = [result["url"] for result in results.get("results", [])]
            logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(urls)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.")
            return urls
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")
            return []
